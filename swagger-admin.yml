openapi: '3.0.3'
info:
  title: Kreasi Nusantara API (Admin)
  version: '1.0.0'
  description: |
    This API provides functionalities for Kreasi Nusantara feature, especially the user-site. (For React Team)
tags:
  - name: Admin
    description: |
      This tag is for all endpoints related to super admin management.
  - name: Product
    description: |
      This tag is for all endpoints related to product management.
  - name: Event
    description: |
      This tag is for all endpoints related to event management.
  - name: Article
    description: |
      This tag is for all endpoints related to article management.

paths:
  /admin/register:
    post:
      tags:
        - Admin 
      operationId: Admin Register
      summary: Super Admin Register
      description: Admin Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: user created successfully
                data:
                  roles: superadmin
                  email: kreasinusantara@gmail.com

        "400":
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: failed
                message: user already exists
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed create user:
                  value:
                    status: failed
                    message: failed to create admin
                failed hashing password:
                  value:
                    status: failed
                    message: failed to hash password

  /admin/login:
    post:
      tags:
        - Admin
      operationId: AdminLogin
      summary: Admin & Super Admin Login
      description: Admin Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: user profile retrieved successfully
                data:
                  roles: superadmin / admin
                  token: jwt_token
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: failed
                message: unauthorized user
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed_login:
                  value:
                    status: failed
                    message: failed to login
  /admin:
    get:
      tags:
        - Admin
      operationId: Get All Admin
      security:
        - bearerAuth: []
      summary: Get All Admin
      description: Get All Admin
      parameters:
        - name: page
          in: query
          description: Page number of the admin
          schema:
            type: integer
          example: 1
        - name: limit
          in: query
          description: Limit of the admin
          schema:
            type: integer
          example: 10
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: admin retrieved successfully
                data:
                  admin:
                    - id: 1
                      email: admin@gmail.com
                      roles: admin
                      first_name: admin
                      last_name: admin
                      created_at: '2022-01-01T00:00:00Z'
                    - id: 2
                      email: superadmin@gmail.com
                      roles: superadmin
                      first_name: superadmin
                      last_name: superadmin
                      created_at: '2022-01-01T00:00:00Z'
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed get all admin:
                  value:
                    status: failed
                    message: failed to get all admin
    post:
      tags:
        - Admin
      operationId: Create Admin
      security:
        - bearerAuth: []
      summary: Create Admin
      description: Create Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: admin created successfully
                data:
                  id: 1
                  email: admin@gmail.com
                  roles: admin
                  first_name: admin
                  last_name: admin
                  created_at: '2022-01-01T00:00:00Z'
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed create admin:
                  value:
                    status: failed
                    message: failed to create admin
    
  /admin/{adminId}:
    put:
      tags:
        - Admin
      operationId: Update Admin
      security:
        - bearerAuth: []
      summary: Update Admin
      description: Update Admin
      parameters:
        - in: path
          name: adminId
          schema:
            type: integer
          required: true
          description: Admin ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: admin updated successfully
                data:
                  id: 1
                  email: admin@gmail.com
                  roles: admin
                  first_name: admin
                  last_name: admin
                  created_at: '2022-01-01T00:00:00Z'
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed update admin:
                  value:
                    status: failed
                    message: failed to update admin


  /products:
    get:
      tags:
        - Product
      summary: Get all products
      operationId: getProducts
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number of the products
          schema:
            type: integer
          example: 1
        - name: limit
          in: query
          description: Limit of the products
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
              example:
                status: success
                message: products retrieved successfully
                data:
                  - id: 1
                    name: Product 1
                    categories:
                        id: 1
                        name: Category 1
                    price: 100000
                    stock: 10
                    likes_count: 100
                  - id: 2
                    name: Product 2
                    categories:
                        id: 2
                        name: Category 2
                    price: 200000
                    stock: 20
                    likes_count: 200
                pagination:
                  current_page: 1
                  total_page: 10
                  total_data: 100
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: failed
                message: failed to retrieve products
    post:
      tags:
        - Product
      operationId: Create Product
      security:
        - bearerAuth: []
      summary: Create Product
      description: Create Product
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: product created successfully
                data:
                  id: 1
                  name: product 1
                  image: 'https://example.com/image.png'
                  description: 'This is the description of the product'
                  price: 10000
                  stock: 10
                  likes_count: 0
                  category_id: 1
                  average_rating: 0
                  reviews_count: 0
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed create product:
                  value:
                    status: failed
                    message: failed to create product
  /products/search:
    get:
      tags:
        - Product
      summary: Search products by name
      operationId: searchProducts
      parameters:
        - name: name
          in: query
          required: true
          description: Name of the product to search
          schema:
            type: string
          example: Batik
        - name: min_price
          in: query
          description: Minimum price of the products
          schema:
            type: integer
          example: 100000
        - name: max_price
          in: query
          description: Maximum price of the products
          schema:
            type: integer
          example: 200000
        - name: sort_by
          in: query
          description: Sort by of the products
          schema:
            type: string
          example: price
        - name: order
          in: query
          description: Order of the products
          schema:
            type: string
          example: asc
        - name: offset
          in: query
          description: Offset of the products
          schema:
            type: integer
          example: 0
        - name: limit
          in: query
          description: Limit of the products
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              example:
                status: success
                message: products retrieved successfully
                data:
                  - id: 1
                    name: Product 1
                    price: 100000
                    stock: 10
                    likes_count: 100
                  - id: 2
                    name: Product 2
                    price: 200000
                    stock: 20
                    likes_count: 200
                metadata:
                  total_data: 100
                  total_count: 10
                  next_offset: 10
                  has_load_more: true
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: failed
                message: failed to retrieve products

  /products/{productId}:
    put:
      tags:
        - Product
      operationId: Update Product
      security:
        - bearerAuth: []
      summary: Update Product
      description: Update Product
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
          description: Product ID
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: product updated successfully
                data:
                  id: 1
                  name: product 1
                  image: 'https://example.com/image.png'
                  description: 'This is the description of the product'
                  price: 10000
                  stock: 10
                  likes_count: 0
                  category_id: 1
                  average_rating: 0
                  reviews_count: 0
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed update product:
                  value:
                    status: failed
                    message: failed to update product

    delete:
      tags:
        - Product
      operationId: Delete Product
      security:
        - bearerAuth: []
      summary: Delete Product
      description: Delete Product
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
          description: Product ID
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: product deleted successfully
                data:    
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed delete product:
                  value:
                    status: failed
                    message: failed to delete product


  /products/categories:
    post:
      tags:
        - Product
      operationId: Create Category Product
      security:
        - bearerAuth: []
      summary: Create Category Product
      description: Create Category Product
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateCategoryRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: category created successfully
                data:
                  id: 1
                  name: category 1
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed create category:
                  value:
                    status: failed
                    message: failed to create category
    get:
      tags:
        - Product
      operationId: Get Category Product
      security:
        - bearerAuth: []
      summary: Get Category Product
      description: Get Category Product
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: category retrieved successfully
                data:
                  id: 1
                  name: category 1
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed get category:
                  value:
                    status: failed
                    message: failed to get category
  
  /products/categories/{categoriesId}:
    put:
      tags:
        - Product
      operationId: Update Category Product
      security:
        - bearerAuth: []
      summary: Update Category Product
      description: Update Category Product
      parameters:
        - in: path
          name: categoriesId
          schema:
            type: integer
          required: true
          description: Category ID
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateCategoryRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: category updated successfully
                data:
                  id: 1
                  name: category 1
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed update category:
                  value:
                    status: failed
                    message: failed to update category

    delete:
      tags:
        - Product
      operationId: Delete Category Product
      security:
        - bearerAuth: []
      summary: Delete Category Product
      description: Delete Category Product
      parameters:
        - in: path
          name: categoriesId
          schema:
            type: integer
          required: true
          description: Category ID
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: category deleted successfully
                data:
                  id: 1
                  name: category 1
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed delete category:
                  value:
                    status: failed
                    message: failed to delete category

  /events:
    get:
      tags:
        - Event
      summary: Get all events
      operationId: getEvents
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number of the events
          schema:
            type: integer
          example: 1
        - name: limit
          in: query
          description: Limit of the events
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
              example:
                status: success
                message: events retrieved successfully
                data:
                  - id: 1
                    name: Event 1
                    description: This is event 1
                    dates:
                      start_date: '2021-08-01T00:00:00Z'
                      end_date: '2021-08-02T00:00:00Z'
                    locations:
                      id: 1
                      city: Solo 
                      province: Jawa Tengah
                  - id: 2
                    name: Event 2
                    description: This is event 2
                    dates:
                      start_date: '2021-08-03T00:00:00Z'
                      end_date: '2021-08-04T00:00:00Z'
                    locations:
                      id: 2
                      city: Yogyakarta
                      province: DI Yogyakarta
                pagination:
                  current_page: 1
                  total_page: 10
                  total_data: 100
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: failed
                message: failed to retrieve events

    post:
      tags:
        - Event
      operationId: Create Event
      security:
        - bearerAuth: []
      summary: Create Event
      description: Create Event
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateEventRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: event created successfully
                data:
                  id: 1
                  name: Event 1
                  description: This is event 1
                  organizer: Hammersonic
                  dates:
                    id: 1
                    start_date: '2021-08-01T00:00:00Z'
                    end_date: '2021-08-02T00:00:00Z'
                    event_time: '08:00 - 17:00'
                    gates_open: '06:00'
                  locations:
                    id: 1
                    address: Jl. Raya No. 1
                    city: Solo 
                    province: Jawa Tengah
                    country: Indonesia
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed create event:
                  value:
                    status: failed
                    message: failed to create event
  /events/search:
    get:
      tags:
        - Event
      summary: Search events by name
      operationId: searchEvents
      parameters:
        - name: name
          in: query
          required: true
          description: Name of the event to search
          schema:
            type: string
          example: Hammersonic
        - name: sort_by
          in: query
          description: Sort by of the events
          schema:
            type: string
        - name: order
          in: query
          description: Order of the events
          schema:
            type: string
          example: asc
        - name: offset
          in: query
          description: Offset of the events
          schema:
            type: integer
          example: 0
        - name: limit
          in: query
          description: Limit of the events
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              example:
                status: success
                message: events retrieved successfully
                data:
                  - id: 1
                    name: Event 1
                    description: This is event 1
                    dates:
                      start_date: '2021-08-01T00:00:00Z'
                      end_date: '2021-08-02T00:00:00Z'
                    locations:
                      id: 1
                      city: Solo 
                      province: Jawa Tengah
                  - id: 2
                    name: Event 2
                    description: This is event 2
                    dates:
                      start_date: '2021-08-03T00:00:00Z'
                      end_date: '2021-08-04T00:00:00Z'
                    locations:
                      id: 2
                      city: Yogyakarta
                      province: DI Yogyakarta
                metadata:
                  total_data: 100
                  total_count: 10
                  next_offset: 10
                  has_load_more: true
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: failed
                message: events not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: failed
                message: failed to retrieve events
                
  /events/{eventId}:            
    put:
      tags:
        - Event
      operationId: Update Event
      security:
        - bearerAuth: []
      summary: Update Event
      description: Update Event
      parameters:
        - in: path
          name: eventId
          schema:
            type: integer
          required: true
          description: Event ID
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateEventRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: event updated successfully
                data:
                  id: 1
                  name: Event 1
                  description: This is event 1
                  organizer: Hammersonic
                  dates:
                    id: 1
                    start_date: '2021-08-01T00:00:00Z'
                    end_date: '2021-08-02T00:00:00Z'
                    event_time: '08:00 - 17:00'
                    gates_open: '06:00'
                  locations:
                    id: 1
                    address: Jl. Raya No. 1
                    city: Solo 
                    province: Jawa Tengah
                    country: Indonesia
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed update event:
                  value:
                    status: failed
                    message: failed to update event

    delete:
      tags:
        - Event
      operationId: Delete Event
      security:
        - bearerAuth: []
      summary: Delete Event
      description: Delete Event
      parameters:
        - in: path
          name: eventId
          schema:
            type: integer
          required: true
          description: Event ID
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: event deleted successfully
                data:
                  id: 1
                  name: Event 1
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed delete event:
                  value:
                    status: failed
                    message: failed to delete event

  /articles: 
    get:
      tags:
        - Article
      summary: Get all articles
      operationId: getArticles
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number of the articles
          schema:
            type: integer
          example: 1
        - name: limit
          in: query
          description: Limit of the articles
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
              example:
                status: success
                message: articles retrieved successfully
                data:
                  - id: 1
                    title: Article 1
                    image: https://yourdomain.com/yourimage.jpg
                    content: This is article 1
                    likes_count: 100
                    comments_count: 10
                  - id: 2
                    title: Article 2
                    image: https://yourdomain.com/yourimage.jpg
                    content: This is article 2
                    likes_count: 200
                    comments_count: 20
                pagination:
                  current_page: 1
                  total_page: 10
                  total_data: 100
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: failed
                message: failed to retrieve articles
    post:
      tags:
        - Article
      operationId: Create Article
      security:
        - bearerAuth: []
      summary: Create Article
      description: Create Article
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateArticleRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: article created successfully
                data:
                  id: 1
                  title: Article 1
                  image: https://yourdomain.com/yourimage.jpg
                  content: This is article 1
                  likes_count: 100
                  comments_count: 10
                  author_id: 1
                  date_published: '2021-08-01T00:00:00Z'
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed create article:
                  value:
                    status: failed
                    message: failed to create article
  /articles/{articlesId}:
    put:
      tags:
        - Article
      operationId: Update Article
      security:
        - bearerAuth: []
      summary: Update Article
      description: Update Article
      parameters:
        - in: path
          name: articlesId
          schema:
            type: integer
          required: true
          description: Article ID
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateArticleRequest'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: article updated successfully
                data:
                  id: 1
                  title: Article 1
                  image: https://yourdomain.com/yourimage.jpg
                  content: This is article 1
                  likes_count: 100
                  comments_count: 10
                  author_id: 1
                  date_published: '2021-08-01T00:00:00Z'
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed update article:
                  value:
                    status: failed
                    message: failed to update article
    
    delete:
      tags:
        - Article
      operationId: Delete Article
      security:
        - bearerAuth: []
      summary: Delete Article
      description: Delete Article
      parameters:
        - in: path
          name: articlesId
          schema:
            type: integer
          required: true
          description: Article ID
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              example:
                status: success
                message: article deleted successfully
                data:
                  id: 1
                  title: Article 1
            
        "400":
          $ref: '#/components/responses/BadRequest'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
              examples:
                failed delete article:
                  value:
                    status: failed
                    message: failed to delete article

components:
  schemas:
    BaseResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the response
        message:
          type: string
          description: Message of the response
        data:
          type: object
          description: Data of the response
      required:
        - status
        - message
    SearchResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the response
        message:
          type: string
          description: The message of the response
        data:
          type: object
          description: The data of the response
        metadata:
          type: object
          description: The metadata of the response
          properties:
            total_data:
              type: integer
              description: The total data of the response
            total_count:
              type: integer
              description: The total count of the response
            next_offset:
              type: integer
              description: The offset for loading more data
            has_load_more:
              type: boolean
              description: Indicates if there is more data to load
    PaginationResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the response
        message:
          type: string
          description: The message of the response
        data:
          type: object
          description: The data of the response
        pagination:
          type: object
          description: The pagination information of the response
          properties:
            current_page:
              type: integer
              description: The current page of the response
            total_page:
              type: integer
              description: The total number of pages of the response
            total_data:
              type: integer
              description: The total data of the response
        link:
          type: object
          description: The links for the response
          properties:
            next:
              type: string
              description: The next link of the response
            prev:
              type: string
              description: The previous link of the response
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email of the admin
          example: kreasinusantara@gmail.com
        password:
          type: string
          description: Password of the admin
          example: yourpassword
    CreateAdminRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email of the admin
          example: kreasinusantara@gmail.com
        first_name:
          type: string
          description: First name of the admin
          example: Kreasi
        last_name:
          type: string
          description: Last name of the admin
          example: Usantara
        password:
          type: string
          description: Password of the admin
          example: yourpassword
    CreateProductRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the product
          example: product 1
        image:
          type: string
          description: Image of the product
          example: https://example.com/image.jpg
        description:
          type: string
          description: Description of the product
          example: description 1
        price:
          type: integer
          description: Price of the product
          example: 10000
        stock:
          type: integer
          description: Stock of the product
          example: 10
        category_id:
          type: integer
          description: Category id of the product
          example: 1
    CreateCategoryRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the category
          example: category 1
    CreateEventRequest:
      type: object
      properties:
        id:
          type: integer
          description: ID of the event
          example: 1
        name:
          type: string
          description: Name of the event
          example: Event 1
        description:
          type: string
          description: Description of the event
          example: This is event 1
        organizer:
          type: string
          description: Organizer of the event
          example: Hammersonic
        dates:
          type: object
          properties:
            id:
              type: integer
              description: ID of the date entry
              example: 1
            start_date:
              type: string
              format: date-time
              description: Start date of the event
              example: 2021-08-01T00:00:00Z
            end_date:
              type: string
              format: date-time
              description: End date of the event
              example: 2021-08-02T00:00:00Z
            event_time:
              type: string
              description: Event time
              example: 08:00 - 17:00
            gates_open:
              type: string
              description: Gates open time
              example: 06:00
        locations:
          type: object
          properties:
            id:
              type: integer
              description: ID of the location
              example: 1
            address:
              type: string
              description: Address of the location
              example: Jl. Raya No. 1
            city:
              type: string
              description: City of the location
              example: Solo
            province:
              type: string
              description: Province of the location
              example: Jawa Tengah
            country:
              type: string
              description: Country of the location
              example: Indonesia
    CreateArticleRequest:
      type: object
      properties:
        title:
          type: string
          description: Title of the article
          example: Article 1
        image:
          type: string
          description: Image of the article
          example: https://example.com/image.jpg
        content:
          type: string
          description: Content of the article
          example: content 1
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: Email of the user
          example: kreasinusantara@gmail.com
        password:
          type: string
          description: Password of the user
          example: yourpassword
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          examples:
            invalid_request_data:
              value:
                status: failed
                message: invalid request data
            mismatched_data_type:
              value:
                status: failed
                message: mismatched data type
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          examples:
            unauthorized:
              value:
                status: failed
                message: unauthorized user
            invalid_token:
              value:
                status: failed
                message: invalid token
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          example:
            status: failed
            message: forbidden resource
    BadGateway:
      description: Bad Gateway
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          example:
            status: failed
            message: external service error
    UserResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
          example:
            status: success
            message: user profile retrieved successfully
            data:
              username: kreasinusantara
              email: kreasinusantara@gmail.com
              phone_no: 081234567890
              gender: Female
              date_of_birth: '2003-05-01T00:00:00Z'
    
    
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

